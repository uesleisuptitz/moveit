{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/uesleisuptitz/projetos/nlw4/moveit/src/context/challenges.context.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { createContext } from \"react\";\nimport challenges from \"../challenges.json\";\nimport Cookies from \"js-cookie\";\nimport { LevelUp } from \"../components/level-up/level-up\";\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport const ChallengesProvider = (_ref) => {\n  var _rest$level, _rest$experience, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: experience,\n    1: setExperience\n  } = useState((_rest$experience = rest.experience) !== null && _rest$experience !== void 0 ? _rest$experience : 0);\n  const {\n    0: challengesCompleteds,\n    1: setChallengesCompleteds\n  } = useState((_rest$challengesCompl = rest.challengesCompleteds) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    if (rest.experience || !rest.experience && experience !== 0) {\n      Cookies.set(\"level\", String(level));\n      Cookies.set(\"experience\", String(experience));\n      Cookies.set(\"challengesCompleteds\", String(challengesCompleteds));\n    }\n  }, [level, experience, challengesCompleteds]);\n\n  const startNewChallenge = () => {\n    let newChallenge = challenges[Math.floor(Math.random() * challenges.length)];\n    setActiveChallenge(newChallenge);\n    new Audio(\"/notification.mp3\").play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio ðŸŽ‰\", {\n        body: `Valendo ${newChallenge.amount}XP!`\n      });\n    }\n  };\n\n  const resetChallenge = () => {\n    setActiveChallenge(null);\n  };\n\n  const completeChallenge = () => {\n    if (!activeChallenge) return;\n    const {\n      amount\n    } = activeChallenge;\n    let xp = experience + amount;\n\n    if (xp >= experienceToLevelUp) {\n      setLevel(level + 1);\n      xp = xp - experienceToLevelUp;\n    }\n\n    setExperience(xp);\n    setActiveChallenge(null);\n    setChallengesCompleteds(challengesCompleteds + 1);\n  };\n\n  const experienceToLevelUp = Math.pow((level + 1) * 4, 2);\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      experience,\n      activeChallenge,\n      challengesCompleteds,\n      levelUp: () => setLevel(level + 1),\n      startNewChallenge,\n      resetChallenge,\n      experienceToLevelUp,\n      completeChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/uesleisuptitz/projetos/nlw4/moveit/src/context/challenges.context.tsx"],"names":["useState","useEffect","createContext","challenges","Cookies","LevelUp","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","experience","setExperience","challengesCompleteds","setChallengesCompleteds","activeChallenge","setActiveChallenge","Notification","requestPermission","set","String","startNewChallenge","newChallenge","Math","floor","random","length","Audio","play","permission","body","amount","resetChallenge","completeChallenge","xp","experienceToLevelUp","pow","levelUp"],"mappings":"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","sourcesContent":["import { useState, ReactNode, useEffect } from \"react\";\nimport { createContext } from \"react\";\nimport challenges from \"../challenges.json\";\nimport Cookies from \"js-cookie\";\nimport { LevelUp } from \"../components/level-up/level-up\";\n\ninterface ChallengesProviderProps {\n  children: ReactNode;\n  level: number;\n  experience: number;\n  challengesCompleteds: number;\n}\ninterface Challenge {\n  type: \"body\" | \"eye\";\n  description: string;\n  amount: number;\n}\ninterface ChallengesContextData {\n  level: number;\n  experience: number;\n  activeChallenge: Challenge;\n  challengesCompleteds: number;\n  levelUp: () => void;\n  startNewChallenge: () => void;\n  resetChallenge: () => void;\n  completeChallenge: () => void;\n  experienceToLevelUp: number;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport const ChallengesProvider = ({\n  children,\n  ...rest\n}: ChallengesProviderProps) => {\n  const [level, setLevel] = useState(rest.level ?? 1);\n  const [experience, setExperience] = useState(rest.experience ?? 0);\n  const [challengesCompleteds, setChallengesCompleteds] = useState(\n    rest.challengesCompleteds ?? 0\n  );\n  const [activeChallenge, setActiveChallenge] = useState(null);\n\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n\n  useEffect(() => {\n    if (rest.experience || (!rest.experience && experience !== 0)) {\n      Cookies.set(\"level\", String(level));\n      Cookies.set(\"experience\", String(experience));\n      Cookies.set(\"challengesCompleteds\", String(challengesCompleteds));\n    }\n  }, [level, experience, challengesCompleteds]);\n\n  const startNewChallenge = () => {\n    let newChallenge =\n      challenges[Math.floor(Math.random() * challenges.length)];\n    setActiveChallenge(newChallenge);\n    new Audio(\"/notification.mp3\").play();\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Novo desafio ðŸŽ‰\", {\n        body: `Valendo ${newChallenge.amount}XP!`,\n      });\n    }\n  };\n\n  const resetChallenge = () => {\n    setActiveChallenge(null);\n  };\n\n  const completeChallenge = () => {\n    if (!activeChallenge) return;\n    const { amount } = activeChallenge;\n    let xp = experience + amount;\n    if (xp >= experienceToLevelUp) {\n      setLevel(level + 1);\n      xp = xp - experienceToLevelUp;\n    }\n    setExperience(xp);\n    setActiveChallenge(null);\n    setChallengesCompleteds(challengesCompleteds + 1);\n  };\n\n  const experienceToLevelUp = Math.pow((level + 1) * 4, 2);\n\n  return (\n    <ChallengesContext.Provider\n      value={{\n        level,\n        experience,\n        activeChallenge,\n        challengesCompleteds,\n        levelUp: () => setLevel(level + 1),\n        startNewChallenge,\n        resetChallenge,\n        experienceToLevelUp,\n        completeChallenge,\n      }}\n    >\n      {children}\n      <LevelUp />\n    </ChallengesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}